package com.fortegrp.at.common.report.internal

import groovy.xml.MarkupBuilder

abstract class AbstractHtmlCreator<T> {

    String css
    String outputDir
    String whenAndWho = "Report created on ${new DateStringFormatHelper().toDateString(new Date())}" +
            " by ${System.getProperty('user.name')}"
    public static String executionStartedLabel = "Execution started on "
    public static Date executionStartedDate = null

    void setCss(String css) {
        if (!css || css.trim().empty) return
        def cssResource = this.class.getResource("/$css")
        if (cssResource)
            try {
                this.@css = cssResource.text
            } catch (e) {
                println "${this.class.name}: Failed to set CSS file to $css: $e"
            }
        else
            println "${this.class.name}: The CSS file does not exist: ${css}"
    }

    File createReportsDir() {
        def reportsDir = new File(outputDir)
        reportsDir.mkdirs()
        reportsDir
    }

    String reportFor(T data) {
        reportFor(data, "")
    }

    String reportFor(T data, String suffix, T appendResult) {
        def writer = new StringWriter()
        def jsScript = this.class.getResource('/report_aggregator.js').text
        def builder = new MarkupBuilder(new IndentPrinter(new PrintWriter(writer), ""))
        builder.expandEmptyElements = true
        builder.html {
            head {
                if (css) style css
            }
            mkp.yieldUnescaped(appendResult != null ? '<script type="text/javascript">\n' + jsScript + '</script>' : "")
            body("onload": "calculate_stats(true)") {
                h2 reportHeader(data)
                hr()
                writeSummary(builder, data, appendResult ? appendResult[1] : null)
                writeDetails(builder, data, suffix, appendResult ? appendResult[0] : "")
                hr()
                writeFooter(builder)
            }
        }
        writer.toString()
    }

    String reportFor(T data, String appendResult) {
        def writer = new StringWriter()
        def jsScript = this.class.getResource('/report_creator.js').text
        def builder = new MarkupBuilder(new IndentPrinter(new PrintWriter(writer), ""))
        builder.expandEmptyElements = true
        builder.html {
            head {
                if (css) style css
            }
            mkp.yieldUnescaped('<script type="text/javascript">\n' + jsScript + '</script>')
            body {
                h2 reportHeader(data)
                hr()
                writeSummary(builder, data)
                writeDetails(builder, data, "", appendResult)
                hr()
                writeFooter(builder)
            }
        }
        writer.toString()
    }

    protected void writeFooter(MarkupBuilder builder) {
        builder.div('class': 'footer') {
            mkp.yieldUnescaped(
                    "Generated by Spock Reports")
        }
    }

    protected double successRate(int total, int reproved) {
        (total > 0 ? (total - reproved) / total : 1.0)
    }

    abstract protected String reportHeader(T data)

    abstract protected void writeSummary(MarkupBuilder builder, T data, Map appendData)

    abstract protected void writeDetails(MarkupBuilder builder, T data, String suffix, String appendData)

}
